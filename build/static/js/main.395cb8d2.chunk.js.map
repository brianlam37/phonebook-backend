{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Number","person","handleClick","name","number","onClick","Persons","persons","map","p","key","id","Filter","handleFilterChange","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","value","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","setMessage","messageType","setMessageType","useEffect","personService","event","target","e","preventDefault","exists","find","undefined","window","confirm","index","findIndex","newPerson","personResponse","copy","setTimeout","catch","error","concat","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.395cb8d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Number = ({person,handleClick}) =>{\r\n    return(\r\n        <p>{person.name} {person.number} <button onClick={() => handleClick(person)}>delete</button></p>\r\n    )\r\n}\r\nconst Persons = ({persons, handleClick}) =>{\r\n    return(\r\n        <>\r\n            {persons.map(p => (<Number key={p.id} handleClick = {handleClick} person = {p}/>))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Filter = ({handleFilterChange}) =>{\r\n    return( \r\n        <>\r\n            filter shown with<input onChange = {handleFilterChange}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({newName, newNumber, handleNameChange, handleNumberChange, handleClick}) =>{\r\n    return(\r\n        <form>\r\n                <div>\r\n                    name: <input value = {newName} onChange = {handleNameChange}/>\r\n                </div>\r\n                <div>\r\n                    number: <input value = {newNumber} onChange = {handleNumberChange}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick ={handleClick}>add</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport './index.css'\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageType, setMessageType] = useState('')\n    const handleNameChange = (event) =>{\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) =>{\n        setNewNumber(event.target.value)\n    }\n\n    const handleClick = (e) =>{\n        e.preventDefault();\n        let exists = persons.find((person)=>person.name === newName);\n\n        if(exists!== undefined){\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n                let index = persons.findIndex(p => p.id === exists.id);\n                const newPerson = {\n                    name: newName, \n                    number: newNumber\n                }\n                personService\n                    .update(exists.id,newPerson).then(personResponse=>{\n                        if(personResponse!== null){\n                            let copy = [...persons];\n                            copy[index] = personResponse;\n                            setPersons(copy);\n                            setNewName('');\n                            setNewNumber('');\n                        }else{\n                            setMessage(\n                                `Information of ${exists.name} has already been removed from server`\n                            );\n                            setMessageType('error');\n                            setTimeout(() => {\n                                setMessage(null);\n                                setMessageType(null);\n                            }, 5000)\n                            setPersons(persons.filter(p => p.id !== exists.id))\n                        }\n                    })\n                    .catch(error => {\n                        setMessage(\n                            `${error.response.data.error}`\n                        );\n                        setMessageType('error');\n                        setTimeout(() => {\n                            setMessage(null);\n                            setMessageType(null);\n                        }, 5000)\n                    });\n            }\n        }else{\n            const newPerson = {\n                name: newName, \n                number: newNumber\n            }\n            personService\n            .create(newPerson)\n            .then(personResponse =>{\n                setMessage(\n                    `Added ${newName}`\n                )\n                setMessageType('success');\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessageType(null);\n                }, 5000)\n                setPersons(persons.concat(personResponse));\n                setNewName('');\n                setNewNumber('');\n            }).catch(error => {\n                setMessage(\n                    `${error.response.data.error}`\n                )\n                setMessageType('error');\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessageType(null);\n                    personService\n                    .getAll()\n                    .then(persons => {\n                        setPersons(persons)\n                    })\n                }, 5000)\n            });\n        }\n    }\n\n    const handleDeleteUpdate = (person) =>{\n        let copy = persons.filter(p => p.id !== person.id);\n        if(window.confirm(`Delete ${person.name}?`)){\n            personService.remove(person.id).then(personResponse=>{\n                setPersons(copy);\n                setMessage(`Deleted ${person.name}`);\n                setMessageType('success');\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessageType(null);\n                }, 5000)\n            }).catch(error =>{\n                setPersons(copy);\n                setMessage(`Information of ${person.name} has already been removed from server`);\n                setMessageType('error');\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessageType(null);\n                }, 5000)\n            });\n        }\n\n    }\n    const handleFilterChange = (event) =>{\n        setFilter(event.target.value)\n    }\n\n    useEffect(() => {\n        personService\n        .getAll()\n          .then(persons => {\n            setPersons(persons)\n          })\n      }, [])\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} type = {messageType}/>\n            <Filter handleFilterChange = {handleFilterChange}/>\n            <h3>add a new</h3>\n            <PersonForm \n                newName = {newName} \n                newNumber = {newNumber}\n                handleNameChange = {handleNameChange} \n                handleClick = {handleClick} \n                handleNumberChange = {handleNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons handleClick = {handleDeleteUpdate} persons = {persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))}/>\n\n        </div>\n    )\n}\n\nconst Notification = ({ message,type}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}