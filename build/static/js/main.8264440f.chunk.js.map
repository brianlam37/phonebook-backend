{"version":3,"sources":["services/persons.js","components/Persons.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Number","person","handleDeleteUpdate","setMessage","setMessageType","name","number","onClick","window","confirm","personService","personResponse","setTimeout","catch","error","Persons","persons","map","p","key","Filter","handleFilterChange","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleClick","value","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","messageType","useEffect","event","target","e","preventDefault","exists","find","undefined","index","findIndex","newPerson","copy","concat","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8264440f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react';\r\nimport personService from '../services/persons'\r\nconst Number = ({person,handleDeleteUpdate, setMessage, setMessageType}) =>{\r\n    const handleClick = ()=>{\r\n        if(window.confirm(`Delete ${person.name}?`)){\r\n            personService.remove(person.id).then(personResponse=>{\r\n                handleDeleteUpdate(person);\r\n                setMessage(`Deleted ${person.name}`);\r\n                setMessageType('success');\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                    setMessageType(null);\r\n                }, 5000)\r\n            }).catch(error =>{\r\n                handleDeleteUpdate(person);\r\n                setMessage(`Information of ${person.name} has already been removed from server`);\r\n                setMessageType('error');\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                    setMessageType(null);\r\n                }, 5000)\r\n            });\r\n        }\r\n    }\r\n    return(\r\n        <p>{person.name} {person.number} <button onClick={handleClick}>delete</button></p>\r\n    )\r\n}\r\nconst Persons = ({persons, handleDeleteUpdate, setMessage, setMessageType}) =>{\r\n    return(\r\n        <>\r\n            {persons.map(p => (<Number key={p.name} handleDeleteUpdate = {handleDeleteUpdate} person = {p} setMessage = {setMessage} setMessageType = {setMessageType}/>))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Filter = ({handleFilterChange}) =>{\r\n    return( \r\n        <>\r\n            filter shown with<input onChange = {handleFilterChange}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({newName, newNumber, handleNameChange, handleNumberChange, handleClick}) =>{\r\n    return(\r\n        <form>\r\n                <div>\r\n                    name: <input value = {newName} onChange = {handleNameChange}/>\r\n                </div>\r\n                <div>\r\n                    number: <input value = {newNumber} onChange = {handleNumberChange}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick ={handleClick}>add</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport './index.css'\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageType, setMessageType] = useState('')\n    const handleNameChange = (event) =>{\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) =>{\n        setNewNumber(event.target.value)\n    }\n\n    const handleClick = (e) =>{\n        e.preventDefault();\n        let exists = persons.find((person)=>person.name === newName);\n\n        if(exists!== undefined){\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n                let index = persons.findIndex(p => p.id === exists.id);\n                const newPerson = {\n                    name: newName, \n                    number: newNumber\n                }\n                personService\n                    .update(exists.id,newPerson).then(personResponse=>{\n                        let copy = [...persons];\n                        copy[index] = newPerson;\n                        setPersons(copy);\n                        setNewName('');\n                        setNewNumber('');\n                    })\n                    .catch(error => {\n                        setMessage(\n                            `Information of ${exists.name} has already been removed from server`\n                        );\n                        setMessageType('error');\n                        setTimeout(() => {\n                            setMessage(null);\n                            setMessageType(null);\n                        }, 5000)\n                        setPersons(persons.filter(p => p.id !== exists.id))\n                    });\n            }\n        }else if(persons.find((person)=>person.number === newNumber)!== undefined){\n            setMessage(\n                `${newNumber} is already added to phonebook`\n            )\n            setMessageType('error');\n            setTimeout(() => {\n                setMessage(null)\n                setMessageType(null)\n            }, 5000)\n        }else{\n            const newPerson = {\n                name: newName, \n                number: newNumber\n            }\n            personService\n            .create(newPerson)\n            .then(personResponse =>{\n                setMessage(\n                    `Added ${newName}`\n                )\n                setMessageType('success');\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessageType(null);\n                }, 5000)\n                setPersons(persons.concat(personResponse));\n                setNewName('');\n                setNewNumber('');\n            }).catch(error => {\n                setMessage(\n                    `There was an error adding ${newName}`\n                )\n                setMessageType('error');\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessageType(null);\n                }, 5000)\n                setPersons(persons.filter(p => p.id !== exists.id))\n            });\n        }\n    }\n\n    const handleDeleteUpdate = (filter) =>{\n        let copy = persons.filter(person => person.id !== filter.id);\n        setPersons(copy);\n    }\n    const handleFilterChange = (event) =>{\n        setFilter(event.target.value)\n    }\n\n    useEffect(() => {\n        personService\n        .getAll()\n          .then(persons => {\n            setPersons(persons)\n          })\n      }, [])\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} type = {messageType}/>\n            <Filter handleFilterChange = {handleFilterChange}/>\n            <h3>add a new</h3>\n            <PersonForm \n                newName = {newName} \n                newNumber = {newNumber}\n                handleNameChange = {handleNameChange} \n                handleClick = {handleClick} \n                handleNumberChange = {handleNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons handleDeleteUpdate = {handleDeleteUpdate} persons = {persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))} setMessage = {setMessage} setMessageType = {setMessageType}></Persons>\n\n        </div>\n    )\n}\n\nconst Notification = ({ message,type}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}